[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "plexos-to-pypsa-converter"
dynamic = ["version"]
description = "PLEXOS-to-PyPSA Converter"
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
]
requires-python = ">=3.10"
dependencies = [
    "pypsa>=0.34",
    "pandas>=2.2",
    "numpy>=2.2",
    "scipy>=1.15",
    "xarray>=2025.1",
    "netcdf4>=1.7",
    "linopy>=0.5.5",
    "matplotlib>=3.10",
    "geopandas>=1.0",
    "networkx>=3.4",
    "pyyaml>=6.0",
    "openpyxl>=3.1",
    "deprecation",
    "validators",
]

[project.urls]
Homepage = "https://github.com/open-energy-transition/plexos-to-pypsa-converter"
Source = "https://github.com/open-energy-transition/plexos-to-pypsa-converter"

[project.optional-dependencies]
jupyter = [
    "jupyter>=1.0",
    "ipykernel>=6.16",
    "ipywidgets>=8.0",
    "notebook>=6.5",
]
solvers = [
    "gurobipy>=12.0",
    "highspy>=1.10",
]
development = [
    "pytest>=8.4",
    "mypy>=1.15",
    "sphinx>=5.3",
    "sphinx-rtd-theme>=1.2",
    "numpydoc>=1.5",
    "pre-commit>=3.0",
    "ruff>=0.12",
]

# Formatter and linter settings

[tool.ruff]
extend-include = ['*.ipynb']

[tool.ruff.lint]
select = [
    'F',        # pyflakes
    'E',        # pycodestyle: Error
    'W',        # pycodestyle: Warning
    'I',        # isort
    'D',        # pydocstyle
    'UP',       # pyupgrade
    'PL',       # pylint
    'PERF',     # perflint
    'ANN',      # flake-8 annotations
    'ASYNC',    # flake8-async
    'TID',      # flake8-tidy-imports
    'S',        # flake8-bandit
    'B',        # flake8-bugbear
    'C4',       # flake8-comprehensions
    'EM',       # flake8-errmsg
    # 'G',        # flake8-logging-format (disabled due to many f-string violations)
    'PIE',      # flake8-pie
    'T20',      # flake8-print
    'PYI',      # flake8-pyi
    'PT',       # flake8-pytest-style
    'SIM',      # flake8-simplify
    'TC',       # flake8-tidy-checking
    'PTH',      # flake8-use-pathlib
    'NPY',      # numpy
    'RUF013',   # ruff
    'ERA',      # eradicate
    'TRY'       # tryceratops
]

ignore = [
    'ANN401', # Dynamically typed expressions are forbidden
    'E501',   # line too long
    'E741',   # ambiguous variable names
    'D203',   # 1 blank line required before class docstring
    'D213',   # Multi-line docstring summary should start at the second line
    'SIM105',
    'SIM108',
    'SIM118',
    'PLR0911',
    'PLR0913',
    'PLR0915',
    'PLR2004',
    'PLW1641',
    'PLR0912',
    'PT011',
    'PLW2901',
    'G004',   # Logging statement uses f-string (TODO: fix gradually)
]

[tool.ruff.lint.per-file-ignores]
"{test,examples,scratch}/**" = [
    'D',     # pydocstyle
    'ERA',   # eradicate
    'S',     # flake8-bandit
    'B',     # flake8-bugbear
    'EM',    # flake8-errmsg
    'T20',   # flake8-print
    'SIM',   # flake8-simplify
    'ARG',   # flake8-unused-arguments
    'PL',    # pylint
    'TRY'    # tryceratops
]

# Gradual adoption - relaxed rules for existing code
"src/**" = [
    'D100', # Missing docstring in public module
    'D101', # Missing docstring in public class
    'D102', # Missing docstring in public method
    'D103', # Missing docstring in public function
    'D105', # Missing docstring in magic method
    'D107', # Missing docstring in __init__
    'D200', # One-line docstring should fit on one line with quotes
    'D205', # 1 blank line required between summary line and description
    'D404', # First word of the docstring should not be "This"
    'D413', # Missing blank line after last section
    'D415', # First line should end with a period, question mark, or exclamation point
    'D417', # Missing argument descriptions in the docstring
    'ANN',  # flake8-annotations (gradual adoption)
    'T20',  # flake8-print (TODO: allow print for now, change later?)
]

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"

# Static type checker settings

[tool.mypy]
exclude = ['examples/*', 'data/*', 'doc/*', 'scratch/*']
ignore_missing_imports = true
no_implicit_optional = true
warn_unused_ignores = true
show_error_code_links = true

[[tool.mypy.overrides]]
module = "src.*"
disallow_untyped_defs = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "plexosdb.*"
ignore_errors = true
follow_imports = "skip"

[[tool.mypy.overrides]]
module = "linopy.*"
ignore_errors = true
follow_imports = "skip"

[tool.setuptools_scm]
version_scheme = "no-guess-dev"